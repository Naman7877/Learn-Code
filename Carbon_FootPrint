#include <iostream>
#include <string>

using namespace std;

class EmailCarbonFootprintCalculator {
private:
    double CARBON_FOOTPRINT_INBOX_EMAIL = 4.0;
    double CARBON_FOOTPRINT_SENT_EMAIL = 2.0;
    double CARBON_FOOTPRINT_SPAM_EMAIL = 0.3;

    double getInboxEmailsCarbonFootprint(int inboxEmails) {
        return (inboxEmails * CARBON_FOOTPRINT_INBOX_EMAIL) / 1000.0;
    }

    double getSentEmailsCarbonFootprint(int sentEmails) {
        return (sentEmails * CARBON_FOOTPRINT_SENT_EMAIL) / 1000.0;
    }

    double getSpamEmailsCarbonFootprint(int spamEmails) {
        return (spamEmails * CARBON_FOOTPRINT_SPAM_EMAIL) / 1000.0;
    }

public:
    struct EmailStructure {
        std::string emailId;
        std::string source;
        std::string inbox;
        std::string sent;
        std::string spam;
    };

    EmailStructure getCarbonFootprint(string& emailId, int inboxEmails, int sentEmails, int spamEmails) {
        EmailStructure emailStructure;
        emailStructure.emailId = emailId;
        emailStructure.source = getSource(emailId);
        emailStructure.inbox = to_string(getInboxEmailsCarbonFootprint(inboxEmails)) + " KG";
        emailStructure.sent = to_string(getSentEmailsCarbonFootprint(sentEmails)) + " KG";
        emailStructure.spam = to_string(getSpamEmailsCarbonFootprint(spamEmails)) + " KG";

        return emailStructure;
    }

    string getSource(string& emailId) {
        if (emailId.find("gmail") != string::npos) {
            return "Gmail";
        } else if (emailId.find("outlook") != string::npos) {
            return "Outlook";
        } else if (emailId.find("yahoo") != string::npos) {
            return "Yahoo";
        }
        return "";
    }
};

int main() {
    EmailCarbonFootprintCalculator calculatorFootPrints;
    string email;
    int inboxEmailCount;
    int spamEmailCount;
    int sendEmailCount;
    cout << "Enter the details related to email" << endl;
    cout << "Enter the Email: " << endl;
    cin >> email;
    cout << "Enter the inbox Email count: " << endl;
    cin >> inboxEmailCount;
    cout << "Enter the spam Email count: " << endl;
    cin >> spamEmailCount; 
    cout << "Enter the sent Email count: " << endl;
    cin >> sendEmailCount; 

    EmailCarbonFootprintCalculator::EmailStructure result = calculatorFootPrints.getCarbonFootprint(email, inboxEmailCount, spamEmailCount, sendEmailCount);
    std::cout << "Email ID: " << result.emailId << endl;
    std::cout << "Source: " << result.source << endl;
    std::cout << "Inbox: " << result.inbox << endl;
    std::cout << "Sent: " << result.sent << endl;
    std::cout << "Spam: " << result.spam << endl;
    return 0;
}
